{
  "name": "Py 3.13 with Jupyter, nox and uv.",
  "image": "mcr.microsoft.com/vscode/devcontainers/base:ubuntu",
  "features": {
    "ghcr.io/devcontainers/features/git:1": {},
    "ghcr.io/devcontainers/features/git-lfs:1": {},
    "ghcr.io/devcontainers/features/github-cli:1": {},
    "ghcr.io/devcontainers-extra/features/vscode-cli:1": {},
    "ghcr.io/devcontainers-extra/features/vscode-server:1": {},
    "ghcr.io/devcontainers-extra/features/pre-commit:2": {},
    "ghcr.io/stuartleeks/dev-container-features/shell-history:0": {},
    "ghcr.io/devcontainers/features/python:1": {
      "version": "3.13.5"
    },
    "ghcr.io/va-h/devcontainers-features/uv:1": {},
    "ghcr.io/devcontainers-extra/features/mypy:2": {},
    "ghcr.io/devcontainers-extra/features/ruff:1": {},
    "ghcr.io/warrenbuckley/codespace-features/sqlite:1": {}
  },
  "customizations": {
    "vscode": {
      "settings": {
        "terminal.integrated.defaultProfile.linux": "bash",
        "editor.formatOnSave": true,
        "python.pythonPath": "~/.pyenv/versions/3.13.5/bin/python",
        "python.linting.enabled": true,
        "python.linting.ruffEnabled": true,
        "editor.defaultFormatter": "ms-python.vscode-pylance",
        "[python]": {
          "editor.defaultFormatter": "charliermarsh.ruff",
          "editor.codeActionsOnSave": {
            "source.fixAll": "explicit"
          }
        }
      },
      "extensions": [
        "ms-python.python",
        "ms-python.debugpy",
        "ms-python.vscode-pylance",
        "charliermarsh.ruff",
        "matangover.mypy",
        "perras.UV",
        "ms-toolsai.jupyter",
        "eamodio.gitlens"
      ]
    }
  },
  "onCreateCommand": "if [ \"$CODESPACES\" = \"true\" ]; then echo 'In Codespaces: Running minimal setup'; else bash .devcontainer/provisioning.sh; fi || true",
  "postCreateCommand": "uv venv .venv && uv pip install -U jupyterlab nox",
  "postStartCommand": "bash .devcontainer/provisioning.sh && bash .devcontainer/setup.sh",
  "forwardPorts": [8000, 8888, 8341],
  "runArgs": ["--network=host"],
  "workspaceMount": "source=${localWorkspaceFolder},target=/workspaces/${localWorkspaceFolderBasename},type=bind",
  "workspaceFolder": "/workspaces/${localWorkspaceFolderBasename}",
  "remoteUser": "vscode"
}
